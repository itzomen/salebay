{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userContants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/searchBox.js","images/salebay.png","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/TopCarousel.js","pages/Home.js","pages/ProductDetails.js","actions/cartActions.js","pages/Cart.js","components/FormContainer.js","pages/Login.js","pages/Register.js","pages/Profile.js","actions/orderActions.js","components/CheckoutSteps.js","pages/Shipping.js","pages/Payment.js","pages/PlaceOrder.js","pages/OrderDetails.js","pages/UserList.js","pages/UserEdit.js","pages/ProductList.js","pages/ProductEdit.js","pages/OrderList.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Col","Form","onSubmit","e","preventDefault","push","location","pathname","inline","InputGroup","Control","placeholder","aria-label","aria-describedby","onChange","target","value","Prepend","Button","variant","name","color","size","animation","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","src","Logo","style","width","marginTop","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Rating","text","Product","Card","_id","Img","image","Body","Title","Text","as","rating","numReviews","price","Loader","Spinner","role","height","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","TopCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Home","search","console","log","length","sm","md","lg","xl","ProductDetails","match","qty","setQty","setRating","comment","setComment","productDetail","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","countInStock","description","xs","disabled","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","Cart","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","Login","email","setEmail","password","setPassword","redirect","login","Register","setName","confirmPassword","setConfirmPassword","setMessage","register","required","Profile","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","Shipping","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","Payment","setPaymentMethod","Check","label","checked","PlaceOrder","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderDetails","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserList","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEdit","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductList","loadingCreate","errorCreate","successCreate","createdProduct","loadingDelete","errorDelete","deleteProduct","category","brand","ProductEdit","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","rows","OrderList","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9586fc79.chunk.js","sourcesContent":["// Reducers constants\n\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\n//CTRL + D TWICE VS CODE\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport { \n    productListReducer, \n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productReviewCreateReducer,\n    productTopRatedReducer,\n\n } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { \n    userLoginReducer, \n    userRegisterReducer, \n    userDetailsReducer, \n    userUpdateProfileReducer,\n\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n\n} from './reducers/userReducers'\n\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer, \n\n    orderListMyReducer,\n    orderListReducer,\n    orderDeliverReducer,\n    \n} from './reducers/orderReducers'\n\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n\n    cart: cartReducer,\n\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n        JSON.parse(localStorage.getItem('cartItems')) : []\n        // converts cartItem string in localStorage to\n        // Javascript Object if it exists\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n        JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n        JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","// product reducers update our states\nimport {     \n\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL, \n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from \"../constants/productConstants\";\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                // action.payload.products the payload is returned\n                // with page and page number, so '.' to acess products\n                loading: false, \n                products: action.payload.products, \n                page: action.payload.page, \n                pages: action.payload.pages\n            }\n\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const productDetailsReducer = (state = { product: {reviews:[]} }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return {\n                loading: false, product: action.payload\n            }\n\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n\n        default:\n            return state\n    }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true, }\n\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload, }\n\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n\n    CART_CLEAR_ITEMS,\n\n} from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        \n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x =>\n                        x.product === existItem.product ? item : x)\n                }\n\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n\n            \n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: []\n            }\n\n        \n        default:\n            return state\n    }\n}","import { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n\n } from \"../constants/userContants\";\n\n export const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_DETAILS_RESET:\n            return { user: {} }\n\n\n        default:\n            return state\n    }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LIST_RESET:\n            return { users: [] }\n\n        default:\n            return state\n    }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_RESET:\n            return { user: {} }\n\n        default:\n            return state\n    }\n}\n","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_CREATE_RESET,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n\n} from '../constants/orderConstants'\n\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n            \n        case ORDER_CREATE_RESET:\n            return {}\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n\n        default:\n            return state\n    }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_PAY_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_DELIVER_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import axios from 'axios'\nimport { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n\n } from \"../constants/userContants\";\n\n import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n export const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React, { useState } from 'react'\nimport { Button, Form, InputGroup, Col } from 'react-bootstrap'\n// to have access of histoty prop in this component\nimport { useHistory } from 'react-router-dom'\n\n\n// history prop cant be added here\nfunction SearchBox() {\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (keyword) {\n            // start at page 1\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    \n\n    return (\n        \n        <Col>\n                <Form onSubmit={submitHandler} inline>\n\n<InputGroup>\n    \n    <Form.Control\n        placeholder=\"Search\"\n        aria-label=\"Search for Products\"\n        aria-describedby=\"Search for Products\"\n        onChange={(e) => setKeyword(e.target.value)}\n        \n        \n    ></Form.Control>\n    \n    <InputGroup.Prepend>\n        <Button \n        type='submit'\n        variant=\"outline-secondary\"\n        >\n            <box-icon\n                type = \"regular\"\n                name=\"search-alt\"\n                color=\"white\"\n                size=\"xs\"\n                animation=\"flashing\"\n            >\n            </box-icon>\n            Apply\n        </Button>\n    </InputGroup.Prepend>\n\n</InputGroup>\n\n\n</Form></Col>\n    )\n}\n\nexport default SearchBox\n","export default __webpack_public_path__ + \"static/media/salebay.1e863449.png\";","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown} from 'react-bootstrap'\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { logout } from '../actions/userActions'\nimport SearchBox from './searchBox'\n\nimport Logo from '../images/salebay.png';\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n            <Container >\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand><img src={Logo} style={{width:100, marginTop: -7}} /></Navbar.Brand>\n                </LinkContainer>\n\n                \n\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <SearchBox />\n                    <Nav className=\"ml-auto\">\n\n                        <LinkContainer to=\"/cart\">\n                            <Nav.Link><i className=\"fas fa-shopping-bag\" style={{ color: 'green' }}></i> CART </Nav.Link>\n                        </LinkContainer>\n\n                        {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item> Profile </NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-sign-in-alt\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n                            )}\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n                    \n                    </Nav>\n                \n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\n\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">Copyright &copy; Salebay</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction Rating({ value, text, color}) {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{ color }} className={\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card} from 'react-bootstrap'\nimport Rating from './Rating'\n// Using link to load new component instead of <a> which reloads\nimport { Link } from \"react-router-dom\";\n\nfunction Product({ product }) {\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src ={product.image} />\n            </Link>\n\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title className=\"row\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n\n                <Card.Text as=\"div\">\n                    <div className=\"my-3\">\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                    </div>\n                </Card.Text>\n\n                <Card.Text as=\"h3\">\n                    ${product.price}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from \"react-bootstrap\";\n\nfunction Loader() {\n    return (\n        <Spinner animation='border'\n                variant='primary'\n                role='status'\n                style={{\n                    height:'100px',\n                    width:'100px',\n                    margin:'auto',\n                    display:'block'\n                }}>\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from \"react-bootstrap\";\n\n\n//passing props to use in home.js\nfunction Message( { variant, children }) {\n    return (\n        <div>\n            <Alert variant={variant}>\n                {children}\n            </Alert>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\n\n    if (keyword) {\n        //console.log(keyword)\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n        //console.log(keyword)\n    }\n\n    return (pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map((x) => (\n                <LinkContainer\n                    key={x + 1}\n                    to={!isAdmin ?\n                        `/?keyword=${keyword}&page=${x + 1}`\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\n                    }\n                >\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n    )\n}\n\nexport default Paginate\n","// Here we perform actions to avoid like calling api\nimport axios from 'axios'\nimport {     \n\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL, \n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from \"../constants/productConstants\";\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n        \n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            // return error and message\n            // custom message comes from data.details\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n        // Reload updated data\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nfunction TopCarousel() {\n\n    const dispatch = useDispatch()\n\n    const productTopRated = useSelector(state => state.productTopRated)\n    const { error, loading, products } = productTopRated\n\n    useEffect(() => {\n        dispatch(listTopProducts())\n    }, [dispatch])\n\n\n    return (loading ? <Loader />\n        : error\n            ? <Message variant='danger'>{error}</Message>\n            : (\n                <Carousel pause='hover' className='bg-light'>\n                    {products.map(product => (\n                        <Carousel.Item key={product._id}>\n                            <Link to={`/product/${product._id}`}>\n                                <Image src={product.image} alt={product.name} fluid />\n                                <Carousel.Caption className='carousel.caption'>\n                                    <h4>{product.name} (${product.price})</h4>\n                                </Carousel.Caption>\n                            </Link>\n                        </Carousel.Item>\n                    ))}\n                </Carousel>\n            )\n    )\n}\n\nexport default TopCarousel\n","import React, { useState, useEffect } from 'react'\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from 'react-router-dom'\n\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts } from \"../actions/productActions\";\nimport TopCarousel from '../components/TopCarousel'\n\n\nfunction Home({ history }) {\n    const dispatch = useDispatch()\n    //selecting var form productReducer which has error, loading, products\n    const productList = useSelector(state => state.productList)\n    const {error, loading, products, page, pages} = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        console.log('Products num:', products.length)\n        //console.log('Products', products)\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n\n    return (\n        <div>\n            {!keyword && <TopCarousel />}\n\n            <h2>Trending products</h2>\n\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                : \n                \n                <div>\n\n                    {products.length == 0 ? (\n                            <Message variant='info'>\n                                No Product was found, Try Searching Again! \n                                <Link to='/'> Back to Home</Link>\n                            </Message>\n                        ) : (\n                        <div>\n                            <Row>\n                                {products.map(product => (\n                                    // add key as each product should have unique id\n                                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                        <Product product={product} />\n                                    </Col>\n                                ))}\n                            </Row>\n                            <Paginate page={page} pages={pages} keyword={keyword} />\n                        </div>\n                    )}\n                </div>      \n            }\n            \n        </div>\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from \"react-bootstrap\";\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\n\nfunction ProductDetails({ match, history }) {\n    const [qty, setQty] = useState(1)\n\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetail = useSelector(state => state.productDetails)\n    const {loading, error, product} = productDetail\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n\n\n    const addToCartHandler = () =>{\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-dark my-3'>Go Back</Link>\n\n                {\n                    loading ? <Loader />\n                    : error\n                        ? <Message variant='danger'></Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n                \n                                <Col md={6}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h4>{product.name}</h4>\n                                        </ListGroup.Item>\n                \n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`}  color={'#f8e825'} />\n                                        </ListGroup.Item>\n                \n                                        <ListGroup.Item>\n\n                                            <Row>\n                                            <Col md={3}>\n                                                    Price:\n                                                </Col>\n                                                <Col md={3}>\n                                                    <strong>${product.price}</strong>\n                                                </Col>\n                                                <Col md={3}>Status:</Col>\n                                                <Col md={3}>\n                                                    <strong>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</strong>\n                                                </Col>\n                                            </Row>\n                                            \n                                            \n                                        </ListGroup.Item>\n                \n                                        <ListGroup.Item>\n                                            <p className=\"mb-0\">Desc: {product.description}</p>\n                                        </ListGroup.Item>\n                                    \n                                        \n                                        {product.countInStock > 0 && (\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Quantity</Col>\n                                                    <Col xs='auto' className='my-1'>\n                                                        <Form.Control\n                                                            as=\"select\"\n                                                            value={qty}\n                                                            onChange={(e) => setQty(e.target.value)}\n                                                        >\n                                                            {\n                                                                //[0,1,2]\n                                                                [...Array(product.countInStock).keys()].map((x) =>(\n                                                                    <option key={x + 1} value={x + 1}>\n                                                                        {x + 1}\n                                                                    </option>\n                                                                ))\n                                                            }\n\n                                                        </Form.Control>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        )}\n\n                                        <ListGroup.Item>\n                                            <Button variant=\"outline-primary\" onClick={addToCartHandler} className='btn-block' disabled={product.countInStock == 0} type='button'>Add to Cart</Button>\n                                        </ListGroup.Item>\n                                        \n                                        \n                                    </ListGroup>\n                                </Col>\n                \n                            </Row>\n                        \n                            <Row>\n                                <Col md={6}>\n                                    <h4>Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n\n                        </div>\n                        \n                    )\n                }\n\n        </div>\n    )\n}\n\nexport default ProductDetails\n\n","import axios from 'axios'\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n\n} from '../constants/cartConstants'\n\n// add to cart uses id and qty as a id is undefined and qty=1 when \n// moving to the cart url hence avoiding change any in product\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n    // convert cartItems from state to string as only strings are\n    // stored in localStorage\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, {useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, ListGroup, Image,Form, Button, Card, ListGroupItem } from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\n\n\nfunction Cart({ match, location, history}) {\n    const productId = match.params.id\n    \n    // Cart.js:13 qty: ?qty=10\n    // split qty to array i.e qty: (2) [\"?qty\", \"10\"]\n    // then convert qty[1] to number\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    //console.log('qty:', qty);\n    //console.log('id:', productId);\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n    //console.log('cartitems:', cart)\n    \n    useEffect(() => {\n        if(productId){\n            dispatch(addToCart(productId, qty))\n        }\n    },[dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n        else{\n            history.push('/login?redirect=shipping')\n        }\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                <Link to='/' className='btn btn-dark my-3'>Go Back</Link>\n                {cartItems.length == 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                    <ListGroup variant='flush'>\n                        {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        <Col md={2}>\n                                            ${item.price}\n                                        </Col>\n\n                                        <Col md={3}>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                                                {\n\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n\n                                            </Form.Control>\n                                        </Col>\n\n                                        <Col md={1}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                    \n                                </ListGroup.Item>\n                            ))}\n                    </ListGroup>\n                )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h3>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h3>\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button\n                            type='button'\n                            variant=\"outline-primary\"\n                            className='btn-block'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                        </Button>\n                    </ListGroup.Item>\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Cart\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nfunction Login({location, history}) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default Login\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction Register({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default Register\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userContants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction Profile({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id ) {\n                // reset profile details to get updated info\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                // id = profile\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n            //clear previous message\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid Date</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td> {order.isPaid ? \n                                                <i className='fas fa-check' style={{ color: 'green' }}>    { order.paidAt.substring(0, 10) }</i>  : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}> Not Paid</i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default Profile","import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Login</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Login</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Shipping</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Payment</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Place Order</Nav.Link>\n                    )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction Shipping({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default Shipping\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction Payment({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    // Default payment method; Paypal\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n\n                        <Form.Check\n                            type='radio'\n                            label='Mobile Money (Coming Soon)'\n                            id='mobile'\n                            name='paymentMethod'\n                            value='Mobile Money'\n                            disabled={true}\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n    </FormContainer>\n    )\n}\n\nexport default Payment","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\n\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\n\nfunction PlaceOrder({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    \n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h4>Shipping</h4>\n\n                            <p>\n                                <strong>Shipping Address: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h5>Payment Method</h5>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h4>Order Items</h4>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h3>Order Summary</h3>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrder\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\n\n\nfunction OrderDetails({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading, user } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n    // Paypal Client ID: ARVUwKZ_Wh7sQ6qp81Wdy_JLifPkzBujw9sBepQFiCHjSAvGNUPqT9tG7YnhOICk1W8W8ReRZJSratua\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=ARVUwKZ_Wh7sQ6qp81Wdy_JLifPkzBujw9sBepQFiCHjSAvGNUPqT9tG7YnhOICk1W8W8ReRZJSratua'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h3>Order: {order._id}</h3>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h4>Shipping</h4>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on the {order.deliveredAt.substring(0, 10)} at {order.deliveredAt.substring(12, 19)}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n\n                                    \n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h5>Payment Method</h5>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on the {order.paidAt.substring(0, 10)} at {order.paidAt.substring(12, 19)}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n                                    \n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h4>Order Items</h4>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h3>Order Summary</h3>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                                \n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderDetails\n","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Col, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\n\n\nfunction UserList({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n\n    useEffect(() => {\n        \n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n            //console.log('deleted')\n        }\n    }\n\n\n    return (\n        <div>\n            <h2>Users</h2>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <Row>\n                                                <Col md={4}>\n                                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                        <Button variant='light' className='btn-sm'>\n                                                            <i className='fas fa-edit'>Edit</i>\n                                                        </Button>\n                                                    </LinkContainer>\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                        <i className='fas fa-trash'>Delete</i>\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserList\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userContants'\n\nfunction UserEdit({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link className='btn btn-dark my-3' to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {/* if loading pass in Loader */}\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEdit","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\n\n// distructure history props\nfunction ProductList({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductList","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nfunction ProductEdit({ match, history }) {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    \n\n    return (\n        <div>\n            <Link className='btn btn-dark my-3' to='/admin/productlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h2>Edit Product</h2>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose Image File'\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n\n\n                            <Form.Group controlId='brand'>\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter brand'\n                                    value={brand}\n                                    onChange={(e) => setBrand(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='countinstock'>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter stock'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='category'>\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter category'\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n\n                                    as=\"textarea\" \n                                    rows={6}\n                                    placeholder='Enter description'\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default ProductEdit","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderList({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}   at   {order.createdAt.substring(12, 19)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}>  {order.paidAt.substring(0, 10) + '  at  ' + order.paidAt.substring(12, 19)}</i>\n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}>  {order.deliveredAt.substring(0, 10) + '  at  ' + order.deliveredAt.substring(12, 19)}</i>\n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderList","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport Home from './pages/Home'\nimport ProductDetails from './pages/ProductDetails';\nimport Cart from './pages/Cart';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Profile from './pages/Profile';\nimport Shipping from './pages/Shipping';\nimport Payment from './pages/Payment';\nimport PlaceOrder from './pages/PlaceOrder'\nimport OrderDetails from './pages/OrderDetails'\nimport UserList from './pages/UserList'\nimport UserEdit from './pages/UserEdit'\nimport ProductList from './pages/ProductList'\nimport ProductEdit from './pages/ProductEdit'\nimport OrderList from './pages/OrderList'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-6\">\n        <Container>\n          {/* -----Using exact because of '/'----- */}\n          <Route path='/'component={Home} exact />\n          <Route path='/login'component={Login}  />\n          <Route path='/register'component={Register}  />\n          <Route path='/profile'component={Profile}  />\n          <Route path='/shipping'component={Shipping}  />\n          <Route path='/placeorder'component={PlaceOrder}  />\n          <Route path='/order/:id'component={OrderDetails}  />\n          <Route path='/payment'component={Payment}  />\n          <Route path='/product/:id'component={ProductDetails}  />\n          <Route path='/cart/:id?'component={Cart}  />\n\n          <Route path='/admin/userlist' component={UserList} />\n          <Route path='/admin/user/:id/edit' component={UserEdit} />\n\n          <Route path='/admin/productlist' component={ProductList} />\n          <Route path='/admin/product/:id/edit' component={ProductEdit} />\n\n          <Route path='/admin/orderlist' component={OrderList} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import store and provider\nimport { Provider } from \"react-redux\";\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}